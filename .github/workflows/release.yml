name: Release
on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Node.js v22 (pin for reproducibility) + npm cache
      - name: Set up Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Configure Rust toolchain
        run: |
          rustup set profile minimal
          rustup update stable
          rustup default stable
          rustup target add wasm32-unknown-unknown

      # Install wasm-pack if your Makefile calls it; safe to keep even if unused
      - name: Ensure wasm-pack is available
        run: cargo install wasm-pack --locked || echo "wasm-pack already installed"

      # Build production release via your Makefile
      - name: Build Release
        env:
          # Prefer Rustâ€™s LLD for deterministic wasm linking
          CARGO_TARGET_WASM32_UNKNOWN_UNKNOWN_LINKER: rust-lld
          CC_wasm32_unknown_unknown: clang
          AR_wasm32_unknown_unknown: ar
          RANLIB_wasm32_unknown_unknown: ranlib
        run: make release

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: release/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
